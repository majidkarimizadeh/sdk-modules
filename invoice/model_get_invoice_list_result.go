/*
Invoices

> The base URL for this API is: **https://api.leaseweb.com/invoices/v1/_**

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invoice

import (
	"encoding/json"
)

// checks if the GetInvoiceListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInvoiceListResult{}

// GetInvoiceListResult struct for GetInvoiceListResult
type GetInvoiceListResult struct {
	Metadata *Metadata `json:"_metadata,omitempty"`
	// An array of invoices.
	Invoices []Invoice `json:"invoices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetInvoiceListResult GetInvoiceListResult

// NewGetInvoiceListResult instantiates a new GetInvoiceListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInvoiceListResult() *GetInvoiceListResult {
	this := GetInvoiceListResult{}
	return &this
}

// NewGetInvoiceListResultWithDefaults instantiates a new GetInvoiceListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInvoiceListResultWithDefaults() *GetInvoiceListResult {
	this := GetInvoiceListResult{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetInvoiceListResult) GetMetadata() Metadata {
	if o == nil || IsNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoiceListResult) GetMetadataOk() (*Metadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetInvoiceListResult) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *GetInvoiceListResult) SetMetadata(v Metadata) {
	o.Metadata = &v
}

// GetInvoices returns the Invoices field value if set, zero value otherwise.
func (o *GetInvoiceListResult) GetInvoices() []Invoice {
	if o == nil || IsNil(o.Invoices) {
		var ret []Invoice
		return ret
	}
	return o.Invoices
}

// GetInvoicesOk returns a tuple with the Invoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvoiceListResult) GetInvoicesOk() ([]Invoice, bool) {
	if o == nil || IsNil(o.Invoices) {
		return nil, false
	}
	return o.Invoices, true
}

// HasInvoices returns a boolean if a field has been set.
func (o *GetInvoiceListResult) HasInvoices() bool {
	if o != nil && !IsNil(o.Invoices) {
		return true
	}

	return false
}

// SetInvoices gets a reference to the given []Invoice and assigns it to the Invoices field.
func (o *GetInvoiceListResult) SetInvoices(v []Invoice) {
	o.Invoices = v
}

func (o GetInvoiceListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInvoiceListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["_metadata"] = o.Metadata
	}
	if !IsNil(o.Invoices) {
		toSerialize["invoices"] = o.Invoices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetInvoiceListResult) UnmarshalJSON(data []byte) (err error) {
	varGetInvoiceListResult := _GetInvoiceListResult{}

	err = json.Unmarshal(data, &varGetInvoiceListResult)

	if err != nil {
		return err
	}

	*o = GetInvoiceListResult(varGetInvoiceListResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_metadata")
		delete(additionalProperties, "invoices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetInvoiceListResult struct {
	value *GetInvoiceListResult
	isSet bool
}

func (v NullableGetInvoiceListResult) Get() *GetInvoiceListResult {
	return v.value
}

func (v *NullableGetInvoiceListResult) Set(val *GetInvoiceListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInvoiceListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInvoiceListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInvoiceListResult(val *GetInvoiceListResult) *NullableGetInvoiceListResult {
	return &NullableGetInvoiceListResult{value: val, isSet: true}
}

func (v NullableGetInvoiceListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInvoiceListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


