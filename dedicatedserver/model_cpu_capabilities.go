/*
Leaseweb API for dedicated servers

This documents the rest api dedicatedserver provides.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the CpuCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpuCapabilities{}

// CpuCapabilities struct for CpuCapabilities
type CpuCapabilities struct {
	Cpufreq *string `json:"cpufreq,omitempty"`
	Ht *string `json:"ht,omitempty"`
	Vmx *bool `json:"vmx,omitempty"`
	X8664 *string `json:"x86-64,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CpuCapabilities CpuCapabilities

// NewCpuCapabilities instantiates a new CpuCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpuCapabilities() *CpuCapabilities {
	this := CpuCapabilities{}
	return &this
}

// NewCpuCapabilitiesWithDefaults instantiates a new CpuCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpuCapabilitiesWithDefaults() *CpuCapabilities {
	this := CpuCapabilities{}
	return &this
}

// GetCpufreq returns the Cpufreq field value if set, zero value otherwise.
func (o *CpuCapabilities) GetCpufreq() string {
	if o == nil || IsNil(o.Cpufreq) {
		var ret string
		return ret
	}
	return *o.Cpufreq
}

// GetCpufreqOk returns a tuple with the Cpufreq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuCapabilities) GetCpufreqOk() (*string, bool) {
	if o == nil || IsNil(o.Cpufreq) {
		return nil, false
	}
	return o.Cpufreq, true
}

// HasCpufreq returns a boolean if a field has been set.
func (o *CpuCapabilities) HasCpufreq() bool {
	if o != nil && !IsNil(o.Cpufreq) {
		return true
	}

	return false
}

// SetCpufreq gets a reference to the given string and assigns it to the Cpufreq field.
func (o *CpuCapabilities) SetCpufreq(v string) {
	o.Cpufreq = &v
}

// GetHt returns the Ht field value if set, zero value otherwise.
func (o *CpuCapabilities) GetHt() string {
	if o == nil || IsNil(o.Ht) {
		var ret string
		return ret
	}
	return *o.Ht
}

// GetHtOk returns a tuple with the Ht field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuCapabilities) GetHtOk() (*string, bool) {
	if o == nil || IsNil(o.Ht) {
		return nil, false
	}
	return o.Ht, true
}

// HasHt returns a boolean if a field has been set.
func (o *CpuCapabilities) HasHt() bool {
	if o != nil && !IsNil(o.Ht) {
		return true
	}

	return false
}

// SetHt gets a reference to the given string and assigns it to the Ht field.
func (o *CpuCapabilities) SetHt(v string) {
	o.Ht = &v
}

// GetVmx returns the Vmx field value if set, zero value otherwise.
func (o *CpuCapabilities) GetVmx() bool {
	if o == nil || IsNil(o.Vmx) {
		var ret bool
		return ret
	}
	return *o.Vmx
}

// GetVmxOk returns a tuple with the Vmx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuCapabilities) GetVmxOk() (*bool, bool) {
	if o == nil || IsNil(o.Vmx) {
		return nil, false
	}
	return o.Vmx, true
}

// HasVmx returns a boolean if a field has been set.
func (o *CpuCapabilities) HasVmx() bool {
	if o != nil && !IsNil(o.Vmx) {
		return true
	}

	return false
}

// SetVmx gets a reference to the given bool and assigns it to the Vmx field.
func (o *CpuCapabilities) SetVmx(v bool) {
	o.Vmx = &v
}

// GetX8664 returns the X8664 field value if set, zero value otherwise.
func (o *CpuCapabilities) GetX8664() string {
	if o == nil || IsNil(o.X8664) {
		var ret string
		return ret
	}
	return *o.X8664
}

// GetX8664Ok returns a tuple with the X8664 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuCapabilities) GetX8664Ok() (*string, bool) {
	if o == nil || IsNil(o.X8664) {
		return nil, false
	}
	return o.X8664, true
}

// HasX8664 returns a boolean if a field has been set.
func (o *CpuCapabilities) HasX8664() bool {
	if o != nil && !IsNil(o.X8664) {
		return true
	}

	return false
}

// SetX8664 gets a reference to the given string and assigns it to the X8664 field.
func (o *CpuCapabilities) SetX8664(v string) {
	o.X8664 = &v
}

func (o CpuCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpuCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpufreq) {
		toSerialize["cpufreq"] = o.Cpufreq
	}
	if !IsNil(o.Ht) {
		toSerialize["ht"] = o.Ht
	}
	if !IsNil(o.Vmx) {
		toSerialize["vmx"] = o.Vmx
	}
	if !IsNil(o.X8664) {
		toSerialize["x86-64"] = o.X8664
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CpuCapabilities) UnmarshalJSON(data []byte) (err error) {
	varCpuCapabilities := _CpuCapabilities{}

	err = json.Unmarshal(data, &varCpuCapabilities)

	if err != nil {
		return err
	}

	*o = CpuCapabilities(varCpuCapabilities)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cpufreq")
		delete(additionalProperties, "ht")
		delete(additionalProperties, "vmx")
		delete(additionalProperties, "x86-64")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCpuCapabilities struct {
	value *CpuCapabilities
	isSet bool
}

func (v NullableCpuCapabilities) Get() *CpuCapabilities {
	return v.value
}

func (v *NullableCpuCapabilities) Set(val *CpuCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableCpuCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableCpuCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpuCapabilities(val *CpuCapabilities) *NullableCpuCapabilities {
	return &NullableCpuCapabilities{value: val, isSet: true}
}

func (v NullableCpuCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpuCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


