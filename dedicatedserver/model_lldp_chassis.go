/*
Leaseweb API for dedicated servers

This documents the rest api dedicatedserver provides.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the LldpChassis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LldpChassis{}

// LldpChassis struct for LldpChassis
type LldpChassis struct {
	Description *string `json:"description,omitempty"`
	// Represents a MAC Address in the standard colon delimited format. Eg. `01:23:45:67:89:0A`
	MacAddress *string `json:"mac_address,omitempty" validate:"regexp=([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\\\.[0-9a-fA-F]{4}\\\\.[0-9a-fA-F]{4})$"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LldpChassis LldpChassis

// NewLldpChassis instantiates a new LldpChassis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLldpChassis() *LldpChassis {
	this := LldpChassis{}
	return &this
}

// NewLldpChassisWithDefaults instantiates a new LldpChassis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLldpChassisWithDefaults() *LldpChassis {
	this := LldpChassis{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LldpChassis) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LldpChassis) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LldpChassis) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LldpChassis) SetDescription(v string) {
	o.Description = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *LldpChassis) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LldpChassis) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *LldpChassis) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *LldpChassis) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LldpChassis) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LldpChassis) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LldpChassis) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LldpChassis) SetName(v string) {
	o.Name = &v
}

func (o LldpChassis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LldpChassis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LldpChassis) UnmarshalJSON(data []byte) (err error) {
	varLldpChassis := _LldpChassis{}

	err = json.Unmarshal(data, &varLldpChassis)

	if err != nil {
		return err
	}

	*o = LldpChassis(varLldpChassis)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "mac_address")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLldpChassis struct {
	value *LldpChassis
	isSet bool
}

func (v NullableLldpChassis) Get() *LldpChassis {
	return v.value
}

func (v *NullableLldpChassis) Set(val *LldpChassis) {
	v.value = val
	v.isSet = true
}

func (v NullableLldpChassis) IsSet() bool {
	return v.isSet
}

func (v *NullableLldpChassis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLldpChassis(val *LldpChassis) *NullableLldpChassis {
	return &NullableLldpChassis{value: val, isSet: true}
}

func (v NullableLldpChassis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLldpChassis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


