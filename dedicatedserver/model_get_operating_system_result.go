/*
Leaseweb API for dedicated servers

This documents the rest api dedicatedserver provides.

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dedicatedserver

import (
	"encoding/json"
)

// checks if the GetOperatingSystemResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOperatingSystemResult{}

// GetOperatingSystemResult struct for GetOperatingSystemResult
type GetOperatingSystemResult struct {
	// The architecture of the operating system
	Architecture *string `json:"architecture,omitempty"`
	// If the default options are configurable or not
	Configurable *bool `json:"configurable,omitempty"`
	Defaults *Defaults `json:"defaults,omitempty"`
	// The operating system family
	Family *string `json:"family,omitempty"`
	// The operating system ID
	Id *string `json:"id,omitempty"`
	// A human readable name for the operating system
	Name *string `json:"name,omitempty"`
	// The type of operating system
	Type *string `json:"type,omitempty"`
	// The version of the operating system
	Version *string `json:"version,omitempty"`
	// Operating system features
	Features []string `json:"features,omitempty"`
	// Operating system supported file systems
	SupportedFileSystems []string `json:"supportedFileSystems,omitempty"`
	// Operating system supported boot devices
	SupportedBootDevices []string `json:"supportedBootDevices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetOperatingSystemResult GetOperatingSystemResult

// NewGetOperatingSystemResult instantiates a new GetOperatingSystemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOperatingSystemResult() *GetOperatingSystemResult {
	this := GetOperatingSystemResult{}
	return &this
}

// NewGetOperatingSystemResultWithDefaults instantiates a new GetOperatingSystemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOperatingSystemResultWithDefaults() *GetOperatingSystemResult {
	this := GetOperatingSystemResult{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *GetOperatingSystemResult) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetConfigurable returns the Configurable field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetConfigurable() bool {
	if o == nil || IsNil(o.Configurable) {
		var ret bool
		return ret
	}
	return *o.Configurable
}

// GetConfigurableOk returns a tuple with the Configurable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetConfigurableOk() (*bool, bool) {
	if o == nil || IsNil(o.Configurable) {
		return nil, false
	}
	return o.Configurable, true
}

// HasConfigurable returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasConfigurable() bool {
	if o != nil && !IsNil(o.Configurable) {
		return true
	}

	return false
}

// SetConfigurable gets a reference to the given bool and assigns it to the Configurable field.
func (o *GetOperatingSystemResult) SetConfigurable(v bool) {
	o.Configurable = &v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetDefaults() Defaults {
	if o == nil || IsNil(o.Defaults) {
		var ret Defaults
		return ret
	}
	return *o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetDefaultsOk() (*Defaults, bool) {
	if o == nil || IsNil(o.Defaults) {
		return nil, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasDefaults() bool {
	if o != nil && !IsNil(o.Defaults) {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given Defaults and assigns it to the Defaults field.
func (o *GetOperatingSystemResult) SetDefaults(v Defaults) {
	o.Defaults = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *GetOperatingSystemResult) SetFamily(v string) {
	o.Family = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetOperatingSystemResult) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetOperatingSystemResult) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetOperatingSystemResult) SetType(v string) {
	o.Type = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetOperatingSystemResult) SetVersion(v string) {
	o.Version = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *GetOperatingSystemResult) SetFeatures(v []string) {
	o.Features = v
}

// GetSupportedFileSystems returns the SupportedFileSystems field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetSupportedFileSystems() []string {
	if o == nil || IsNil(o.SupportedFileSystems) {
		var ret []string
		return ret
	}
	return o.SupportedFileSystems
}

// GetSupportedFileSystemsOk returns a tuple with the SupportedFileSystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetSupportedFileSystemsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedFileSystems) {
		return nil, false
	}
	return o.SupportedFileSystems, true
}

// HasSupportedFileSystems returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasSupportedFileSystems() bool {
	if o != nil && !IsNil(o.SupportedFileSystems) {
		return true
	}

	return false
}

// SetSupportedFileSystems gets a reference to the given []string and assigns it to the SupportedFileSystems field.
func (o *GetOperatingSystemResult) SetSupportedFileSystems(v []string) {
	o.SupportedFileSystems = v
}

// GetSupportedBootDevices returns the SupportedBootDevices field value if set, zero value otherwise.
func (o *GetOperatingSystemResult) GetSupportedBootDevices() []string {
	if o == nil || IsNil(o.SupportedBootDevices) {
		var ret []string
		return ret
	}
	return o.SupportedBootDevices
}

// GetSupportedBootDevicesOk returns a tuple with the SupportedBootDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOperatingSystemResult) GetSupportedBootDevicesOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedBootDevices) {
		return nil, false
	}
	return o.SupportedBootDevices, true
}

// HasSupportedBootDevices returns a boolean if a field has been set.
func (o *GetOperatingSystemResult) HasSupportedBootDevices() bool {
	if o != nil && !IsNil(o.SupportedBootDevices) {
		return true
	}

	return false
}

// SetSupportedBootDevices gets a reference to the given []string and assigns it to the SupportedBootDevices field.
func (o *GetOperatingSystemResult) SetSupportedBootDevices(v []string) {
	o.SupportedBootDevices = v
}

func (o GetOperatingSystemResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOperatingSystemResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.Configurable) {
		toSerialize["configurable"] = o.Configurable
	}
	if !IsNil(o.Defaults) {
		toSerialize["defaults"] = o.Defaults
	}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.SupportedFileSystems) {
		toSerialize["supportedFileSystems"] = o.SupportedFileSystems
	}
	if !IsNil(o.SupportedBootDevices) {
		toSerialize["supportedBootDevices"] = o.SupportedBootDevices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetOperatingSystemResult) UnmarshalJSON(data []byte) (err error) {
	varGetOperatingSystemResult := _GetOperatingSystemResult{}

	err = json.Unmarshal(data, &varGetOperatingSystemResult)

	if err != nil {
		return err
	}

	*o = GetOperatingSystemResult(varGetOperatingSystemResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "architecture")
		delete(additionalProperties, "configurable")
		delete(additionalProperties, "defaults")
		delete(additionalProperties, "family")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "type")
		delete(additionalProperties, "version")
		delete(additionalProperties, "features")
		delete(additionalProperties, "supportedFileSystems")
		delete(additionalProperties, "supportedBootDevices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetOperatingSystemResult struct {
	value *GetOperatingSystemResult
	isSet bool
}

func (v NullableGetOperatingSystemResult) Get() *GetOperatingSystemResult {
	return v.value
}

func (v *NullableGetOperatingSystemResult) Set(val *GetOperatingSystemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOperatingSystemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOperatingSystemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOperatingSystemResult(val *GetOperatingSystemResult) *NullableGetOperatingSystemResult {
	return &NullableGetOperatingSystemResult{value: val, isSet: true}
}

func (v NullableGetOperatingSystemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOperatingSystemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


