openapi: 3.0.0
info:
  contact: {}
  description: This documents the rest api aggregation packs provides.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Leaseweb API for aggregation packs
  version: v2
  x-logo:
    altText: Leaseweb developer documentation
    backgroundColor: '#5484c6'
    href: https://developer.leaseweb.com
    url: https://developer.leaseweb.com/images/logo.png
servers:
- url: https://api.leaseweb.com/bareMetals/v2
security:
- X-LSW-Auth: []
tags:
- description: |
    The API uses standard HTTP status codes to indicate the success or failure of the API call. The response will be JSON. Most APIs use the following format:

    ```json
    {
        "errorCode": "APP00800",
        "errorMessage": "The connection with the DB cannot be established.",
        "correlationId": "550e8400-e29b-41d4-a716-446655440000",
        "userMessage": "Cannot handle your request at the moment. Please try again later.",
        "reference": "https://developer.leaseweb.com/errors/APP00800"
    }
    ```
  name: Errors
  x-traitTag: true
- description: |
    Authentication for the APIs is required. To authenticate your call, you will need to sent your API key as `X-LSW-Auth` header.

    You can generate API keys in the [Customer Portal](https://secure.leaseweb.com/api-client-management/).
  name: API Key Authentication
  x-traitTag: true
- name: Aggregation Packs
paths:
  /aggregationPacks:
    get:
      description: |
        List your Aggregation Packs. This api call supports pagination. Use the
        `limit` and `offset` query string parameters to paginate through all your
        aggregation packs.

        Every `aggregation pack` object in the json response lists a few properties of a aggregation pack.
        Use the single resource api call to get more details for a single aggregation pack.
      operationId: getAggregationPackList
      parameters:
      - description: Limit the number of results returned.
        example: 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Return results starting from the given offset.
        example: 10
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                _metadata:
                  limit: 2
                  offset: 0
                  totalCount: 10
                connectContractItems:
                - id: "123456"
                  customerId: "1234"
                  salesOrgId: "2000"
                  contractStartDate: 2022-07-01T00:00:00Z
                  billingType: 95TH
                  connectivityType: BANDWIDTH_POOL
                  contractTerm: 36
                  dataTrafficCommit: 20000
                  dataTrafficCommitUnit: Mbps
                  networkPerformanceType: VOLUME
                  aggregationType: Hybrid
                - id: "1234567"
                  customerId: "1234"
                  salesOrgId: "2000"
                  contractStartDate: 2021-07-01T00:00:00Z
                  billingType: 95TH
                  connectivityType: BANDWIDTH_POOL
                  contractTerm: 36
                  dataTrafficCommit: 30000
                  dataTrafficCommitUnit: Mbps
                  networkPerformanceType: VOLUME
                  aggregationType: Hybrid
              schema:
                $ref: '#/components/schemas/getAggregationPackListResult'
          description: Ok.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: List aggregation packs
      tags:
      - aggregationpack
  /aggregationPacks/{aggregationPackId}:
    get:
      description: |
        Use this API to get information about a single aggregation pack.
      operationId: getAggregationPack
      parameters:
      - description: The ID of aggregation pack
        explode: false
        in: path
        name: aggregationPackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                aggregationType: Hybrid
                billingType: 95TH
                connectivityType: BANDWIDTH_POOL
                contractStartDate: 2022-07-01T00:00:00Z
                contractTerm: 36
                customerId: "1234"
                dataTrafficCommit: 20000
                dataTrafficCommitUnit: Mbps
                id: "123456"
                networkPerformanceType: VOLUME
                salesOrgId: "2000"
              schema:
                $ref: '#/components/schemas/aggregationPack'
          description: Ok.
        "401":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "401"
                errorMessage: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Authorized.
        "403":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "403"
                errorMessage: Access to the requested resource is forbidden.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Forbidden.
        "404":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "404"
                errorMessage: Resource not found
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Not Found.
        "500":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "500"
                errorMessage: '''The API could not handle your request at this time.'
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Internal Server Error.
        "503":
          content:
            application/json:
              example:
                correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
                errorCode: "503"
                errorMessage: The API is not available at the moment.
              schema:
                $ref: '#/components/schemas/errorResult'
          description: Service Unavailable.
      summary: Get aggregation pack
      tags:
      - aggregationpack
components:
  parameters:
    limit:
      description: Limit the number of results returned.
      example: 20
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    offset:
      description: Return results starting from the given offset.
      example: 10
      explode: true
      in: query
      name: offset
      required: false
      schema:
        type: integer
      style: form
    aggregationPackId:
      description: The ID of aggregation pack
      explode: false
      in: path
      name: aggregationPackId
      required: true
      schema:
        type: string
      style: simple
  responses:
    "401":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "401"
            errorMessage: You are not authorized to view this resource.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Not Authorized.
    "403":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "403"
            errorMessage: Access to the requested resource is forbidden.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Forbidden.
    "404":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "404"
            errorMessage: Resource not found
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Not Found.
    "500":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "500"
            errorMessage: '''The API could not handle your request at this time.'
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Internal Server Error.
    "503":
      content:
        application/json:
          example:
            correlationId: 289346a1-3eaf-4da4-b707-62ef12eb08be
            errorCode: "503"
            errorMessage: The API is not available at the moment.
          schema:
            $ref: '#/components/schemas/errorResult'
      description: Service Unavailable.
  schemas:
    _metadata:
      description: Metadata about the collection
      example:
        offset: 0
        limit: 5
        totalCount: 2
      properties:
        totalCount:
          description: Total amount of elements in this collection
          example: 2
          minimum: 0
          type: integer
        offset:
          default: 0
          description: The offset used to generate this response
          example: 0
          minimum: 0
          type: integer
        limit:
          default: 5
          description: The limit used to generate this response
          example: 5
          minimum: 0
          type: integer
      required:
      - limit
      - offset
      - totalCount
      title: metadata
      type: object
    dataTrafficCommitUnit:
      enum:
      - Gbps
      - Mbps
      - TB
      type: string
    networkPerformanceType:
      enum:
      - VOLUME
      - PREMIUM
      type: string
    aggregationType:
      enum:
      - Hybrid
      type: string
    aggregationPack:
      example:
        connectivityType: connectivityType
        aggregationType: Hybrid
        networkPerformanceType: VOLUME
        billingType: billingType
        contractStartDate: 2000-01-23T04:56:07.000+00:00
        contractTerm: 0
        customerId: customerId
        dataTrafficCommitUnit: Gbps
        id: id
        dataTrafficCommit: 6
        salesOrgId: salesOrgId
      properties:
        id:
          description: Id of the aggregation pack
          type: string
        customerId:
          type: string
        salesOrgId:
          type: string
        contractStartDate:
          format: date-time
          type: string
        billingType:
          type: string
        connectivityType:
          type: string
        contractTerm:
          type: integer
        dataTrafficCommit:
          type: integer
        dataTrafficCommitUnit:
          $ref: '#/components/schemas/dataTrafficCommitUnit'
        networkPerformanceType:
          $ref: '#/components/schemas/networkPerformanceType'
        aggregationType:
          $ref: '#/components/schemas/aggregationType'
      required:
      - aggregationType
      - billingType
      - connectivityType
      - contractStartDate
      - contractTerm
      - customerId
      - dataTrafficCommit
      - dataTrafficCommitUnit
      - id
      - networkPerformanceType
      - salesOrgId
      type: object
    getAggregationPackListResult:
      example:
        connectContractItems:
        - connectivityType: connectivityType
          aggregationType: Hybrid
          networkPerformanceType: VOLUME
          billingType: billingType
          contractStartDate: 2000-01-23T04:56:07.000+00:00
          contractTerm: 0
          customerId: customerId
          dataTrafficCommitUnit: Gbps
          id: id
          dataTrafficCommit: 6
          salesOrgId: salesOrgId
        - connectivityType: connectivityType
          aggregationType: Hybrid
          networkPerformanceType: VOLUME
          billingType: billingType
          contractStartDate: 2000-01-23T04:56:07.000+00:00
          contractTerm: 0
          customerId: customerId
          dataTrafficCommitUnit: Gbps
          id: id
          dataTrafficCommit: 6
          salesOrgId: salesOrgId
        _metadata:
          offset: 0
          limit: 5
          totalCount: 2
      properties:
        _metadata:
          $ref: '#/components/schemas/_metadata'
        connectContractItems:
          description: An array of aggregation packs
          items:
            $ref: '#/components/schemas/aggregationPack'
          type: array
      type: object
    errorResult:
      example:
        errorMessage: errorMessage
        errorCode: errorCode
        correlationId: correlationId
        errorDetails:
          key:
          - errorDetails
          - errorDetails
      properties:
        correlationId:
          description: The correlation ID of the current request.
          type: string
        errorCode:
          description: The error code.
          type: string
        errorMessage:
          description: A human friendly description of the error.
          type: string
        errorDetails:
          additionalProperties:
            items:
              type: string
            type: array
          title: errorDetails
          type: object
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
    X-LSW-Auth:
      description: API key authentication by setting `X-LSW-Auth` header.
      in: header
      name: X-LSW-Auth
      type: apiKey
