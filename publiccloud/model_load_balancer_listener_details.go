/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
	"fmt"
)

// checks if the LoadBalancerListenerDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerListenerDetails{}

// LoadBalancerListenerDetails struct for LoadBalancerListenerDetails
type LoadBalancerListenerDetails struct {
	Protocol Protocol `json:"protocol"`
	// Port for the listener
	Port int32 `json:"port"`
	// The listener unique identifier
	Id string `json:"id"`
	Rules []LoadBalancerListenerRule `json:"rules"`
	SslCertificates []SslCertificate `json:"sslCertificates"`
	AdditionalProperties map[string]interface{}
}

type _LoadBalancerListenerDetails LoadBalancerListenerDetails

// NewLoadBalancerListenerDetails instantiates a new LoadBalancerListenerDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerListenerDetails(protocol Protocol, port int32, id string, rules []LoadBalancerListenerRule, sslCertificates []SslCertificate) *LoadBalancerListenerDetails {
	this := LoadBalancerListenerDetails{}
	this.Protocol = protocol
	this.Port = port
	this.Id = id
	this.Rules = rules
	this.SslCertificates = sslCertificates
	return &this
}

// NewLoadBalancerListenerDetailsWithDefaults instantiates a new LoadBalancerListenerDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerListenerDetailsWithDefaults() *LoadBalancerListenerDetails {
	this := LoadBalancerListenerDetails{}
	return &this
}

// GetProtocol returns the Protocol field value
func (o *LoadBalancerListenerDetails) GetProtocol() Protocol {
	if o == nil {
		var ret Protocol
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerListenerDetails) GetProtocolOk() (*Protocol, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *LoadBalancerListenerDetails) SetProtocol(v Protocol) {
	o.Protocol = v
}

// GetPort returns the Port field value
func (o *LoadBalancerListenerDetails) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerListenerDetails) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *LoadBalancerListenerDetails) SetPort(v int32) {
	o.Port = v
}

// GetId returns the Id field value
func (o *LoadBalancerListenerDetails) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerListenerDetails) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LoadBalancerListenerDetails) SetId(v string) {
	o.Id = v
}

// GetRules returns the Rules field value
func (o *LoadBalancerListenerDetails) GetRules() []LoadBalancerListenerRule {
	if o == nil {
		var ret []LoadBalancerListenerRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerListenerDetails) GetRulesOk() ([]LoadBalancerListenerRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *LoadBalancerListenerDetails) SetRules(v []LoadBalancerListenerRule) {
	o.Rules = v
}

// GetSslCertificates returns the SslCertificates field value
func (o *LoadBalancerListenerDetails) GetSslCertificates() []SslCertificate {
	if o == nil {
		var ret []SslCertificate
		return ret
	}

	return o.SslCertificates
}

// GetSslCertificatesOk returns a tuple with the SslCertificates field value
// and a boolean to check if the value has been set.
func (o *LoadBalancerListenerDetails) GetSslCertificatesOk() ([]SslCertificate, bool) {
	if o == nil {
		return nil, false
	}
	return o.SslCertificates, true
}

// SetSslCertificates sets field value
func (o *LoadBalancerListenerDetails) SetSslCertificates(v []SslCertificate) {
	o.SslCertificates = v
}

func (o LoadBalancerListenerDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerListenerDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protocol"] = o.Protocol
	toSerialize["port"] = o.Port
	toSerialize["id"] = o.Id
	toSerialize["rules"] = o.Rules
	toSerialize["sslCertificates"] = o.SslCertificates

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadBalancerListenerDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protocol",
		"port",
		"id",
		"rules",
		"sslCertificates",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLoadBalancerListenerDetails := _LoadBalancerListenerDetails{}

	err = json.Unmarshal(data, &varLoadBalancerListenerDetails)

	if err != nil {
		return err
	}

	*o = LoadBalancerListenerDetails(varLoadBalancerListenerDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "port")
		delete(additionalProperties, "id")
		delete(additionalProperties, "rules")
		delete(additionalProperties, "sslCertificates")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadBalancerListenerDetails struct {
	value *LoadBalancerListenerDetails
	isSet bool
}

func (v NullableLoadBalancerListenerDetails) Get() *LoadBalancerListenerDetails {
	return v.value
}

func (v *NullableLoadBalancerListenerDetails) Set(val *LoadBalancerListenerDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerListenerDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerListenerDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerListenerDetails(val *LoadBalancerListenerDetails) *NullableLoadBalancerListenerDetails {
	return &NullableLoadBalancerListenerDetails{value: val, isSet: true}
}

func (v NullableLoadBalancerListenerDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerListenerDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


