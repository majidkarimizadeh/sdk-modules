/*
LeaseWeb API for launching and managing Public Cloud instances

> The base URL for this API is: **https://api.leaseweb.com/publicCloud/v1/_**  This API provides ways to launch and manage Public Cloud instances.  <div class=\"badge\">BETA</div> This API is in BETA. Documentation might be incorrect or incomplete. Functionality might change with the final release.>

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package publiccloud

import (
	"encoding/json"
)

// checks if the GetLoadBalancerListResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLoadBalancerListResult{}

// GetLoadBalancerListResult struct for GetLoadBalancerListResult
type GetLoadBalancerListResult struct {
	LoadBalancers []LoadBalancerListItem `json:"loadBalancers,omitempty"`
	Metadata *Metadata `json:"_metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetLoadBalancerListResult GetLoadBalancerListResult

// NewGetLoadBalancerListResult instantiates a new GetLoadBalancerListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLoadBalancerListResult() *GetLoadBalancerListResult {
	this := GetLoadBalancerListResult{}
	return &this
}

// NewGetLoadBalancerListResultWithDefaults instantiates a new GetLoadBalancerListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLoadBalancerListResultWithDefaults() *GetLoadBalancerListResult {
	this := GetLoadBalancerListResult{}
	return &this
}

// GetLoadBalancers returns the LoadBalancers field value if set, zero value otherwise.
func (o *GetLoadBalancerListResult) GetLoadBalancers() []LoadBalancerListItem {
	if o == nil || IsNil(o.LoadBalancers) {
		var ret []LoadBalancerListItem
		return ret
	}
	return o.LoadBalancers
}

// GetLoadBalancersOk returns a tuple with the LoadBalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoadBalancerListResult) GetLoadBalancersOk() ([]LoadBalancerListItem, bool) {
	if o == nil || IsNil(o.LoadBalancers) {
		return nil, false
	}
	return o.LoadBalancers, true
}

// HasLoadBalancers returns a boolean if a field has been set.
func (o *GetLoadBalancerListResult) HasLoadBalancers() bool {
	if o != nil && !IsNil(o.LoadBalancers) {
		return true
	}

	return false
}

// SetLoadBalancers gets a reference to the given []LoadBalancerListItem and assigns it to the LoadBalancers field.
func (o *GetLoadBalancerListResult) SetLoadBalancers(v []LoadBalancerListItem) {
	o.LoadBalancers = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetLoadBalancerListResult) GetMetadata() Metadata {
	if o == nil || IsNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoadBalancerListResult) GetMetadataOk() (*Metadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetLoadBalancerListResult) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *GetLoadBalancerListResult) SetMetadata(v Metadata) {
	o.Metadata = &v
}

func (o GetLoadBalancerListResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLoadBalancerListResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoadBalancers) {
		toSerialize["loadBalancers"] = o.LoadBalancers
	}
	if !IsNil(o.Metadata) {
		toSerialize["_metadata"] = o.Metadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetLoadBalancerListResult) UnmarshalJSON(data []byte) (err error) {
	varGetLoadBalancerListResult := _GetLoadBalancerListResult{}

	err = json.Unmarshal(data, &varGetLoadBalancerListResult)

	if err != nil {
		return err
	}

	*o = GetLoadBalancerListResult(varGetLoadBalancerListResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "loadBalancers")
		delete(additionalProperties, "_metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetLoadBalancerListResult struct {
	value *GetLoadBalancerListResult
	isSet bool
}

func (v NullableGetLoadBalancerListResult) Get() *GetLoadBalancerListResult {
	return v.value
}

func (v *NullableGetLoadBalancerListResult) Set(val *GetLoadBalancerListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLoadBalancerListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLoadBalancerListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLoadBalancerListResult(val *GetLoadBalancerListResult) *NullableGetLoadBalancerListResult {
	return &NullableGetLoadBalancerListResult{value: val, isSet: true}
}

func (v NullableGetLoadBalancerListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLoadBalancerListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


